<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Egipad061" name="Test" tests="20" failures="0" timestamp="27 Jul 2018 12:09:15 GMT" time="55.254" errors="0">
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: failed to change window state to maximized, current state is minimized
  (Session info: chrome=67.0.3396.99)
  (Driver info: chromedriver=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.16 seconds
Build info: version: &amp;apos;2.53.1&amp;apos;, revision: &amp;apos;a36b8b1cd5757287168e54b817830adce9b0158d&amp;apos;, time: &amp;apos;2016-06-30 19:26:09&amp;apos;
System info: host: &amp;apos;Egipad061&amp;apos;, ip: &amp;apos;172.16.70.51&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_181&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73), userDataDir=C:\Users\vyadav\AppData\Local\Temp\scoped_dir25124_20230}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=67.0.3396.99, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=false, acceptInsecureCerts=false, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: b8ff43346cc9dda09ad39d388336b040">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: failed to change window state to maximized, current state is minimized
  (Session info: chrome=67.0.3396.99)
  (Driver info: chromedriver=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73),platform=Windows NT 10.0.16299 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 1.16 seconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Egipad061', ip: '172.16.70.51', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.35.528161 (5b82f2d2aae0ca24b877009200ced9065a772e73), userDataDir=C:\Users\vyadav\AppData\Local\Temp\scoped_dir25124_20230}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=67.0.3396.99, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=false, acceptInsecureCerts=false, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: b8ff43346cc9dda09ad39d388336b040
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:945)
	at registration.UserRegistration.beforeMethod(UserRegistration.java:345)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="is_pwd_encrypted" time="0.089" classname="registration.UserRegistration"/>
  <testcase name="isfield_present" time="0.58" classname="registration.UserRegistration"/>
  <testcase name="blank_field" time="1.376" classname="registration.UserRegistration"/>
  <testcase name="fname_blank" time="2.112" classname="registration.UserRegistration"/>
  <testcase name="lname_blank" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- lname_blank -->
  <testcase name="uname_blank" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- uname_blank -->
  <testcase name="pwd_blank" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- pwd_blank -->
  <testcase name="cpwd_blank" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- cpwd_blank -->
  <testcase name="email_blank" time="0.001" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- email_blank -->
  <testcase name="fname_lenth" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- fname_lenth -->
  <testcase name="lname_lenth" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- lname_lenth -->
  <testcase name="uname_length" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- uname_length -->
  <testcase name="pwd_length" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- pwd_length -->
  <testcase name="cpwd_length" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- cpwd_length -->
  <testcase name="invalid_email" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- invalid_email -->
  <testcase name="invalid_phone" time="0.001" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- invalid_phone -->
  <testcase name="all_invalid_field_lenth" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- all_invalid_field_lenth -->
  <testcase name="pwd_match" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- pwd_match -->
  <testcase name="pwd_mismatch" time="0.001" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- pwd_mismatch -->
  <testcase name="successful_registration" time="0.0" classname="registration.UserRegistration">
    <skipped/>
  </testcase> <!-- successful_registration -->
</testsuite> <!-- Test -->
